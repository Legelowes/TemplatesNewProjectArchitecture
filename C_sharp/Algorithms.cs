//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Algorithms : Script File.cs
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
namespace FLORANCE_DevelopersTemplete
{
    public class Algorithms
    {
//	PUBLIC -==============================================================================================================================================
//  ======================================================================================================================================================
//  ======================================================================================================================================================
//	CONSTANTS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	REGISTERS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	CONSTRUCTOR ******************************************************************************************************************************************
// 	******************************************************************************************************************************************************
        public Algorithms(int num_implemented_cores)
        {
        // TIER CHARLIE (Top - 2) :: Control/Algorithms
            this.control_Algorithms = new FLORANCE_DevelopersTemplete.Control_Algorithms();
            while(this.control_Algorithms == null) { } //wait.
            System.Console.WriteLine(">> >> >> Object CREATED : Static_XxxxxxXxxxxx/control_Algorithms");//SIMULATION
        // TIER CHARLIE (Top - 2) :: Algorithms/Concurrent
            this.algorithms_Concurrent = new FLORANCE_DevelopersTemplete.Algorithms_Concurrent[num_implemented_cores-1];
            while(this.algorithms_Concurrent == null) { } //wait.
            for(int index=0; index < num_implemented_cores-1; index++)
            {
                this.algorithms_Concurrent[index] = new FLORANCE_DevelopersTemplete.Algorithms_Concurrent();
                while(this.algorithms_Concurrent[index] == null) { } //wait.
                System.Console.WriteLine(">> >> >> Object CREATED : Static_XxxxxxXxxxxx/algorithms_Concurrent[" + index + "]");//SIMULATION
            }
            // TIER DELTA (Top - 3) :: Control/Algorithms/Concurrent
        // TIER CHARLIE (Top - 2) :: Algorithms/ListenRespond
            this.algorithms_ListenRespond = new FLORANCE_DevelopersTemplete.Algorithms_ListenRespond();
            while(this.algorithms_ListenRespond == null) { } //wait.
            System.Console.WriteLine(">> >> >> Object CREATED : Static_XxxxxxXxxxxx/algorithms_ListenRespond");//SIMULATION
            // TIER DELTA (Top - 3) :: Control/Algorithms/ListenRespond
        }
        ~Algorithms()
        {

        }


//	METHODS **********************************************************************************************************************************************
// 	******************************************************************************************************************************************************

//	GET & SET --------------------------------------------------------------------------------------------------------------------------------------------
    // TIER CHARLIE (Top - 2) :: Algorithms/Concurrent
        public Algorithms_Concurrent getInstance_Algorithms_Concurrent(int coreId)
        {
            return this.algorithms_Concurrent[coreId];
        }
    // TIER CHARLIE (Top - 2) :: Algorithms/ListenRespond
        public Algorithms_ListenRespond getInstance_Algorithms_ListenRespond()
        {
            return this.algorithms_ListenRespond;
        }
    // TIER CHARLIE (Top - 2) :: Control/Algorithms
        public Control_Algorithms getInstance_Control_Algorithms()
        {
            return this.control_Algorithms;
        }

//	PROTECTED ============================================================================================================================================
//  ======================================================================================================================================================
//  ======================================================================================================================================================
//	CONSTANTS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	REGISTERS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	METHODS **********************************************************************************************************************************************
// 	******************************************************************************************************************************************************

//	GET & SET --------------------------------------------------------------------------------------------------------------------------------------------



//	PRIVATE ==============================================================================================================================================
//  ======================================================================================================================================================
//  ======================================================================================================================================================
//	CONSTANTS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	REGISTERS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************
    // TIER CHARLIE (Top - 2) :: Control/Algorithms 
        private Control_Algorithms control_Algorithms;
    // TIER CHARLIE (Top - 2) :: Algorithms/Concurrent
        private Algorithms_Concurrent[] algorithms_Concurrent;
    // TIER CHARLIE (Top - 2) :: Algorithms/ListenRespond
        private Algorithms_ListenRespond algorithms_ListenRespond;



//	METHODS **********************************************************************************************************************************************
// 	******************************************************************************************************************************************************

//	GET & SET --------------------------------------------------------------------------------------------------------------------------------------------

        
    }
    public class Algorithms_Concurrent
    {
//	PUBLIC -==============================================================================================================================================
//  ======================================================================================================================================================
//  ======================================================================================================================================================
//	CONSTANTS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	REGISTERS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	CONSTRUCTOR ******************************************************************************************************************************************
// 	******************************************************************************************************************************************************
        public Algorithms_Concurrent()
        {
            // TIER DELTA (Top - 3) :: Control/Algorithms/Concurrent
            this.control_Algorithms_Concurrent = new FLORANCE_DevelopersTemplete.Control_Algorithms_Concurrent();
            while(this.control_Algorithms_Concurrent == null) { } //wait.
            System.Console.WriteLine(">> >> >> Object CREATED : Static_XxxxxxXxxxxx/control_Algorithms_Concurrent");//SIMULATION
        }
        ~Algorithms_Concurrent()
        {

        }


//	METHODS **********************************************************************************************************************************************
// 	******************************************************************************************************************************************************

//	GET & SET --------------------------------------------------------------------------------------------------------------------------------------------
            // TIER DELTA (Top - 3) :: Control/Algorithms/Concurrent
            public Control_Algorithms_Concurrent getInstance_Control_Algorithms_Concurrent()
            {
                return this.control_Algorithms_Concurrent;
            }


//	PROTECTED ============================================================================================================================================
//  ======================================================================================================================================================
//  ======================================================================================================================================================
//	CONSTANTS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	REGISTERS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	METHODS **********************************************************************************************************************************************
// 	******************************************************************************************************************************************************

//	GET & SET --------------------------------------------------------------------------------------------------------------------------------------------



//	PRIVATE ==============================================================================================================================================
//  ======================================================================================================================================================
//  ======================================================================================================================================================
//	CONSTANTS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	REGISTERS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************
        // TIER DELTA (Top - 3) :: Control/Algorithms/Concurrent
            private Control_Algorithms_Concurrent control_Algorithms_Concurrent;

//	METHODS **********************************************************************************************************************************************
// 	******************************************************************************************************************************************************

//	GET & SET --------------------------------------------------------------------------------------------------------------------------------------------

        
    }
        public class Algorithms_ListenRespond
    {
//	PUBLIC -==============================================================================================================================================
//  ======================================================================================================================================================
//  ======================================================================================================================================================
//	CONSTANTS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	REGISTERS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	CONSTRUCTOR ******************************************************************************************************************************************
// 	******************************************************************************************************************************************************
        public Algorithms_ListenRespond()
        {
            // TIER DELTA (Top - 3) :: Control/Algorithms/ListenRespond
            this.control_Algorithms_ListenRespond = new FLORANCE_DevelopersTemplete.Control_Algorithms_ListenRespond();
            while(this.control_Algorithms_ListenRespond == null) { } //wait.
            System.Console.WriteLine(">> >> >> Object CREATED : Static_XxxxxxXxxxxx/control_Algorithms_ListenRespond");//SIMULATION
        }
        ~Algorithms_ListenRespond()
        {

        }


//	METHODS **********************************************************************************************************************************************
// 	******************************************************************************************************************************************************

//	GET & SET --------------------------------------------------------------------------------------------------------------------------------------------
        // TIER DELTA (Top - 3) :: Control/Algorithms/ListenRespond
            public Control_Algorithms_ListenRespond getInstance_Control_Algorithms_ListenRespond()
            {
                return this.control_Algorithms_ListenRespond;
            }


//	PROTECTED ============================================================================================================================================
//  ======================================================================================================================================================
//  ======================================================================================================================================================
//	CONSTANTS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	REGISTERS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	METHODS **********************************************************************************************************************************************
// 	******************************************************************************************************************************************************

//	GET & SET --------------------------------------------------------------------------------------------------------------------------------------------



//	PRIVATE ==============================================================================================================================================
//  ======================================================================================================================================================
//  ======================================================================================================================================================
//	CONSTANTS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	REGISTERS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************
        // TIER DELTA (Top - 3) :: Control/Algorithms/ListenRespond
            private Control_Algorithms_ListenRespond control_Algorithms_ListenRespond;

//	METHODS **********************************************************************************************************************************************
// 	******************************************************************************************************************************************************

//	GET & SET --------------------------------------------------------------------------------------------------------------------------------------------

        
    }
}
//End <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<